#pragma once
#include<cstdint>

#define EID_JOINCHANNEL_SUCCESS			    0x00000001
#define EID_REJOINCHANNEL_SUCCESS		    0x00000002
#define EID_ERROR						    0x00000003
#define EID_AUDIO_QUALITY				    0x00000004
#define EID_AUDIO_TRANSPORT_QUALITY		`   0x00000005
#define EID_VUDIO_TRANSPORT_QUALITY		    0x00000006
#define EID_RECAP						    0x00000007
#define EID_AUDIO_VOLUME_INDICATION			0x00000008
#define EID_LEAVE_CHANNEL					0x00000009
#define EID_UPDATE_SESSION_STATS			0x0000000A
#define EID_MEDIA_ENGINE_EVENT				0x0000000B
#define EID_AUDIO_DEVICE_STATE_CHANGED		0x0000000C
#define EID_LASTMILE_QUALITY				0x0000000D
#define EID_FIRST_LOCAL_VIDEO_FRAME			0x0000000E
#define EID_FIRST_REMOTE_VIDEO_DECODED		0x0000000F
#define EID_FIRST_REMOTE_VIDEO_FRAME		0x00000010
#define EID_USER_JOINED						0x00000011
#define EID_USER_OFFLINE					0x00000012
#define EID_USER_MUTE_AUDIO					0x00000013
#define EID_USER_MUTE_VIDEO					0x00000014
#define EID_AUDIO_RECORDER_EXCEPTION		0x00000015
#define EID_LOCAL_VIDEO_STAT				0x00000016
#define EID_REMOTE_VIDEO_STAT				0x00000017
#define EID_CAMERA_READY					0x00000018
#define EID_CONNECTION_LOST					0x00000019
#define EID_VENDOR_MESSAGE					0x0000001A
#define EID_VIDEO_DEVICE_STATE_CHANGED		0x0000001B
#define EID_VIDEO_STOPPED					0x0000001C
#define EID_START_RCDSRV					0x0000001D
#define EID_STOP_RCDSRV						0x0000001E
#define EID_REFREASH_RCDSRV					0x0000001F
#define EID_APICALL_EXECUTED				0x00000020
#define EID_STREAM_MESSAGE                  0x00000021

typedef struct _AGE_JOINCHANNEL_SUCCESS
{
    char	    *channel;
    uint32_t	uid;
    int		    elapsed;

} AGE_JOINCHANNEL_SUCCESS, *PAGE_JOINCHANNEL_SUCCESS, *LPAGE_JOINCHANNEL_SUCCESS;


typedef AGE_JOINCHANNEL_SUCCESS AGE_REJOINCHANNEL_SUCCESS, *PAGE_REJOINCHANNEL_SUCCESS, *LPAGE_REJOINCHANNEL_SUCCESS ;


typedef struct _AGE_ERROR
{
    int		err;
    char	*msg;

} AGE_ERROR, *PAGE_ERROR, *LPAGE_ERROR;


typedef struct _AGE_AUDIO_QUALITY {
    uint32_t			uid;
    int				quality;
    unsigned short	delay;
    unsigned short	lost;

} AGE_AUDIO_QUALITY, *PAGE_AUDIO_QUALITY, *LPAGE_AUDIO_QUALITY;


typedef struct _AGE_AUDIO_TRANSPORT_QUALITY
{
    uint32_t			uid; 
    unsigned short	delay;
    unsigned short	lost;

} AGE_AUDIO_TRANSPORT_QUALITY, *PAGE_AUDIO_TRANSPORT_QUALITY, *LPAGE_AUDIO_TRANSPORT_QUALITY;


typedef AGE_AUDIO_TRANSPORT_QUALITY AGE_VIDEO_TRANSPORT_QUALITY, *PAGE_VIDEO_TRANSPORT_QUALITY, *LPAGE_VIDEO_TRANSPORT_QUALITY;


typedef struct _AGE_RECAP
{
    char*	recapData;
    int		length;

} AGE_RECAP, *PAGE_RECAP, *LPAGE_RECAP;


typedef struct _AGE_AUDIO_VOLUME_INDICATION 
{
    AudioVolumeInfo		*speakers;
    unsigned int		speakerNumber;
    int					totalVolume;

} AGE_AUDIO_VOLUME_INDICATION, *PAGE_AUDIO_VOLUME_INDICATION, *LPAGE_AUDIO_VOLUME_INDICATION;


typedef struct _AGE_LEAVE_CHANNEL
{
    RtcStats	rtcStat;

} AGE_LEAVE_CHANNEL, *PAGE_LEAVE_CHANNEL, *LPAGE_LEAVE_CHANNEL;


typedef AGE_LEAVE_CHANNEL AGE_UPDATE_SESSION_STATS, *PAGE_UPDATE_SESSION_STATS, *LPAGE_UPDATE_SESSION_STATS;


typedef struct _AGE_MEDIA_ENGINE_EVENT
{
    int evt;

} AGE_MEDIA_ENGINE_EVENT, *PAGE_MEDIA_ENGINE_EVENT, *LPAGE_MEDIA_ENGINE_EVENT;


typedef struct _AGE_AUDIO_DEVICE_STATE_CHANGED
{
    char	*deviceId;
    int		deviceType;
    int		deviceState;

} AGE_AUDIO_DEVICE_STATE_CHANGED, *PAGE_AUDIO_DEVICE_STATE_CHANGED, *LPAGE_AUDIO_DEVICE_STATE_CHANGED;



typedef struct _AGE_LASTMILE_QUALITY
{
    int quality;

} AGE_LASTMILE_QUALITY, *PAGE_LASTMILE_QUALITY, *LPAGE_LASTMILE_QUALITY;


typedef struct _AGE_FIRST_LOCAL_VIDEO_FRAME
{
    int width;
    int height;
    int elapsed;

} AGE_FIRST_LOCAL_VIDEO_FRAME, *PAGE_FIRST_LOCAL_VIDEO_FRAME, *LPAGE_FIRST_LOCAL_VIDEO_FRAME;


typedef struct _AGE_FIRST_REMOTE_VIDEO_DECODED
{
    uint32_t	uid;
    int		width;
    int		height;
    int		elapsed;

} AGE_FIRST_REMOTE_VIDEO_DECODED, *PAGE_FIRST_REMOTE_VIDEO_DECODED, *LPAGE_FIRST_REMOTE_VIDEO_DECODED;


typedef AGE_FIRST_REMOTE_VIDEO_DECODED AGE_FIRST_REMOTE_VIDEO_FRAME, *PAGE_FIRST_REMOTE_VIDEO_FRAME, *LPAGE_FIRST_REMOTE_VIDEO_FRAME;


typedef struct _AGE_USER_JOINED
{
    uint32_t	uid;
    int		elapsed;

} AGE_USER_JOINED, *PAGE_USER_JOINED, *LPAGE_USER_JOINED;


typedef struct _AGE_USER_OFFLINE
{
    uint32_t	uid;
    USER_OFFLINE_REASON_TYPE		reason;

} AGE_USER_OFFLINE, *PAGE_USER_OFFLINE, *LPAGE_USER_OFFLINE;


typedef struct _AGE_USER_MUTE_AUDIO
{
    uint32_t uid;
    bool  muted;

} AGE_USER_MUTE_AUDIO, *PAGE_USER_MUTE_AUDIO, *LPAGE_USER_MUTE_AUDIO;


typedef AGE_USER_MUTE_AUDIO AGE_USER_MUTE_VIDEO, *PAGE_USER_MUTE_VIDEO, *LPAGE_USER_MUTE_VIDEO;


typedef struct _AGE_AUDIO_RECORDER_EXCEPTION
{
    int elapsed;

} AGE_AUDIO_RECORDER_EXCEPTION, *PAGE_AUDIO_RECORDER_EXCEPTION, *LPAGE_AUDIO_RECORDER_EXCEPTION;


typedef struct _AGE_LOCAL_VIDEO_STAT
{
    int sentBitrate;
    int sentFrameRate;

} AGE_LOCAL_VIDEO_STAT, *PAGE_LOCAL_VIDEO_STAT, *LPAGE_LOCAL_VIDEO_STAT;


typedef struct _AGE_REMOTE_VIDEO_STAT
{
    uint32_t uid;
    int delay;
    int width;
    int height;
    int receivedBitrate;
    int receivedFrameRate;

} AGE_REMOTE_VIDEO_STAT, *PAGE_REMOTE_VIDEO_STAT, *LPAGE_REMOTE_VIDEO_STAT;


typedef struct _AGE_VENDOR_MESSAGE
{
    uint32_t uid;
    char* data;
    size_t length;

} AGE_VENDOR_MESSAGE, *PAGE_VENDOR_MESSAGE, *LPAGE_VENDOR_MESSAGE;


typedef struct _AGE_VIDEO_DEVICE_STATE_CHANGED
{
    char	*deviceId;
    int		deviceType;
    int		deviceState;

} AGE_VIDEO_DEVICE_STATE_CHANGED, *PAGE_VIDEO_DEVICE_STATE_CHANGED, *LPAGE_VIDEO_DEVICE_STATE_CHANGED;



typedef struct _AGE_RCDSRV_STATUS
{
    int status;

}AGE_RCDSRV_STATUS, *PAGE_RCDSRV_STATUS, *LPAGE_RCDSRV_STATUS;


typedef struct _AGE_APICALL_EXECUTED
{
    char	api[128];
    int		error;

}AGE_APICALL_EXECUTED, *PAGE_APICALL_EXECUTED, *LPAGE_APICALL_EXECUTED;


typedef struct _AGE_STREAM_MESSAGE
{
    uint32_t       uid;
    int         streamId;
    char        *data;
    size_t      length;

} AGE_STREAM_MESSAGE, *PAGE_STREAM_MESSAGE, *LPAGE_STREAM_MESSAGE;


